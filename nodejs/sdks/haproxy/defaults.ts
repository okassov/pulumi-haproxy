// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Defaults extends pulumi.CustomResource {
    /**
     * Get an existing Defaults resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultsState, opts?: pulumi.CustomResourceOptions): Defaults {
        return new Defaults(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'haproxy:index/defaults:Defaults';

    /**
     * Returns true if the given object is an instance of Defaults.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Defaults {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Defaults.__pulumiType;
    }

    /**
     * The backlog of the defaults, it can be true or false
     */
    public readonly backlog!: pulumi.Output<number | undefined>;
    /**
     * The check timeout of the defaults
     */
    public readonly checkTimeout!: pulumi.Output<number | undefined>;
    /**
     * The client timeout of the defaults
     */
    public readonly clientTimeout!: pulumi.Output<number | undefined>;
    /**
     * The connect timeout of the defaults
     */
    public readonly connectTimeout!: pulumi.Output<number | undefined>;
    public readonly defaultsId!: pulumi.Output<string>;
    /**
     * The http keep alive timeout of the defaults
     */
    public readonly httpKeepAliveTimeout!: pulumi.Output<number | undefined>;
    /**
     * The http request timeout of the defaults
     */
    public readonly httpRequestTimeout!: pulumi.Output<number | undefined>;
    /**
     * The httplog of the defaults, it can be true or false
     */
    public readonly httplog!: pulumi.Output<boolean | undefined>;
    /**
     * The httpslog of the defaults, it can be true or false
     */
    public readonly httpslog!: pulumi.Output<boolean | undefined>;
    /**
     * The max connections of the defaults
     */
    public readonly maxconn!: pulumi.Output<number | undefined>;
    /**
     * http, tcp
     */
    public readonly mode!: pulumi.Output<string | undefined>;
    /**
     * The name of the defaults. It must be unique and cannot be changed.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The queue timeout of the defaults
     */
    public readonly queueTimeout!: pulumi.Output<number | undefined>;
    /**
     * The retries of the defaults, it can be integer or null
     */
    public readonly retries!: pulumi.Output<number | undefined>;
    /**
     * The server fin timeout of the defaults
     */
    public readonly serverFinTimeout!: pulumi.Output<number | undefined>;
    /**
     * The server timeout of the defaults
     */
    public readonly serverTimeout!: pulumi.Output<number | undefined>;
    /**
     * The tcplog of the defaults, it can be true or false
     */
    public readonly tcplog!: pulumi.Output<boolean | undefined>;

    /**
     * Create a Defaults resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DefaultsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultsArgs | DefaultsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultsState | undefined;
            resourceInputs["backlog"] = state ? state.backlog : undefined;
            resourceInputs["checkTimeout"] = state ? state.checkTimeout : undefined;
            resourceInputs["clientTimeout"] = state ? state.clientTimeout : undefined;
            resourceInputs["connectTimeout"] = state ? state.connectTimeout : undefined;
            resourceInputs["defaultsId"] = state ? state.defaultsId : undefined;
            resourceInputs["httpKeepAliveTimeout"] = state ? state.httpKeepAliveTimeout : undefined;
            resourceInputs["httpRequestTimeout"] = state ? state.httpRequestTimeout : undefined;
            resourceInputs["httplog"] = state ? state.httplog : undefined;
            resourceInputs["httpslog"] = state ? state.httpslog : undefined;
            resourceInputs["maxconn"] = state ? state.maxconn : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["queueTimeout"] = state ? state.queueTimeout : undefined;
            resourceInputs["retries"] = state ? state.retries : undefined;
            resourceInputs["serverFinTimeout"] = state ? state.serverFinTimeout : undefined;
            resourceInputs["serverTimeout"] = state ? state.serverTimeout : undefined;
            resourceInputs["tcplog"] = state ? state.tcplog : undefined;
        } else {
            const args = argsOrState as DefaultsArgs | undefined;
            resourceInputs["backlog"] = args ? args.backlog : undefined;
            resourceInputs["checkTimeout"] = args ? args.checkTimeout : undefined;
            resourceInputs["clientTimeout"] = args ? args.clientTimeout : undefined;
            resourceInputs["connectTimeout"] = args ? args.connectTimeout : undefined;
            resourceInputs["defaultsId"] = args ? args.defaultsId : undefined;
            resourceInputs["httpKeepAliveTimeout"] = args ? args.httpKeepAliveTimeout : undefined;
            resourceInputs["httpRequestTimeout"] = args ? args.httpRequestTimeout : undefined;
            resourceInputs["httplog"] = args ? args.httplog : undefined;
            resourceInputs["httpslog"] = args ? args.httpslog : undefined;
            resourceInputs["maxconn"] = args ? args.maxconn : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["queueTimeout"] = args ? args.queueTimeout : undefined;
            resourceInputs["retries"] = args ? args.retries : undefined;
            resourceInputs["serverFinTimeout"] = args ? args.serverFinTimeout : undefined;
            resourceInputs["serverTimeout"] = args ? args.serverTimeout : undefined;
            resourceInputs["tcplog"] = args ? args.tcplog : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Defaults.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Defaults resources.
 */
export interface DefaultsState {
    /**
     * The backlog of the defaults, it can be true or false
     */
    backlog?: pulumi.Input<number>;
    /**
     * The check timeout of the defaults
     */
    checkTimeout?: pulumi.Input<number>;
    /**
     * The client timeout of the defaults
     */
    clientTimeout?: pulumi.Input<number>;
    /**
     * The connect timeout of the defaults
     */
    connectTimeout?: pulumi.Input<number>;
    defaultsId?: pulumi.Input<string>;
    /**
     * The http keep alive timeout of the defaults
     */
    httpKeepAliveTimeout?: pulumi.Input<number>;
    /**
     * The http request timeout of the defaults
     */
    httpRequestTimeout?: pulumi.Input<number>;
    /**
     * The httplog of the defaults, it can be true or false
     */
    httplog?: pulumi.Input<boolean>;
    /**
     * The httpslog of the defaults, it can be true or false
     */
    httpslog?: pulumi.Input<boolean>;
    /**
     * The max connections of the defaults
     */
    maxconn?: pulumi.Input<number>;
    /**
     * http, tcp
     */
    mode?: pulumi.Input<string>;
    /**
     * The name of the defaults. It must be unique and cannot be changed.
     */
    name?: pulumi.Input<string>;
    /**
     * The queue timeout of the defaults
     */
    queueTimeout?: pulumi.Input<number>;
    /**
     * The retries of the defaults, it can be integer or null
     */
    retries?: pulumi.Input<number>;
    /**
     * The server fin timeout of the defaults
     */
    serverFinTimeout?: pulumi.Input<number>;
    /**
     * The server timeout of the defaults
     */
    serverTimeout?: pulumi.Input<number>;
    /**
     * The tcplog of the defaults, it can be true or false
     */
    tcplog?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Defaults resource.
 */
export interface DefaultsArgs {
    /**
     * The backlog of the defaults, it can be true or false
     */
    backlog?: pulumi.Input<number>;
    /**
     * The check timeout of the defaults
     */
    checkTimeout?: pulumi.Input<number>;
    /**
     * The client timeout of the defaults
     */
    clientTimeout?: pulumi.Input<number>;
    /**
     * The connect timeout of the defaults
     */
    connectTimeout?: pulumi.Input<number>;
    defaultsId?: pulumi.Input<string>;
    /**
     * The http keep alive timeout of the defaults
     */
    httpKeepAliveTimeout?: pulumi.Input<number>;
    /**
     * The http request timeout of the defaults
     */
    httpRequestTimeout?: pulumi.Input<number>;
    /**
     * The httplog of the defaults, it can be true or false
     */
    httplog?: pulumi.Input<boolean>;
    /**
     * The httpslog of the defaults, it can be true or false
     */
    httpslog?: pulumi.Input<boolean>;
    /**
     * The max connections of the defaults
     */
    maxconn?: pulumi.Input<number>;
    /**
     * http, tcp
     */
    mode?: pulumi.Input<string>;
    /**
     * The name of the defaults. It must be unique and cannot be changed.
     */
    name?: pulumi.Input<string>;
    /**
     * The queue timeout of the defaults
     */
    queueTimeout?: pulumi.Input<number>;
    /**
     * The retries of the defaults, it can be integer or null
     */
    retries?: pulumi.Input<number>;
    /**
     * The server fin timeout of the defaults
     */
    serverFinTimeout?: pulumi.Input<number>;
    /**
     * The server timeout of the defaults
     */
    serverTimeout?: pulumi.Input<number>;
    /**
     * The tcplog of the defaults, it can be true or false
     */
    tcplog?: pulumi.Input<boolean>;
}
