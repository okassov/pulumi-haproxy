// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getNameserver(args: GetNameserverArgs, opts?: pulumi.InvokeOptions): Promise<GetNameserverResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("haproxy:index/getNameserver:getNameserver", {
        "id": args.id,
        "name": args.name,
        "resolver": args.resolver,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNameserver.
 */
export interface GetNameserverArgs {
    id?: string;
    name: string;
    resolver: string;
}

/**
 * A collection of values returned by getNameserver.
 */
export interface GetNameserverResult {
    readonly id: string;
    readonly name: string;
    readonly resolver: string;
}
export function getNameserverOutput(args: GetNameserverOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNameserverResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("haproxy:index/getNameserver:getNameserver", {
        "id": args.id,
        "name": args.name,
        "resolver": args.resolver,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getNameserver.
 */
export interface GetNameserverOutputArgs {
    id?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    resolver: pulumi.Input<string>;
}
